p = []
p.append([-6.446170, -79.055023, 0.275307])
p.append([65.516594, 7.808423, 0.275307])
p.append([65.568863, 4.308813, 0.275307])
p.append([-2.419357, 204.005676, 0.275307])
p.append([-2.410624, 207.505676, 0.275307])
p.append([-20.033100, 204.005676, 0.275307])
p.append([-20.024366, 207.505676, 0.275307])
p.append([-2.948311, -78.932617, 0.275307])
p.append([-55.049702, 0.545833, 0.275307])
p.append([-117.493454, -3.221493, 0.275307])
p.append([-77.887169, 21.444204, 0.350000])
p.append([-74.387177, 21.434658, 0.350000])
p.append([-77.887169, 40.306927, 0.648878])
p.append([-74.387177, 40.297382, 0.648878])
p.append([-77.887169, 57.541164, 1.007297])
p.append([-74.387177, 57.531620, 1.007297])
p.append([-77.887169, 75.658577, 1.102074])
p.append([140.592041, 5.371150, 0.275307])
p.append([140.539780, 8.870760, 0.275307])
p.append([120.127945, 5.371150, 0.275307])
p.append([120.075668, 8.870760, 0.275307])
p.append([192.449112, 6.308762, 0.275307])
p.append([192.396835, 9.808371, 0.275307])
p.append([174.485291, 6.308762, 0.275307])
p.append([174.432999, 9.808371, 0.275307])
p.append([-74.387177, 75.649033, 1.102074])
p.append([-77.887169, 99.725639, 0.700000])
p.append([-74.387177, 99.716110, 0.700000])
p.append([-88.154869, 108.906883, 0.520476])
p.append([-84.654892, 108.895164, 0.520476])
p.append([-88.167549, 36.942276, 0.581295])
p.append([-84.767197, 37.030930, 0.581295])
p.append([-95.444824, 136.115875, 0.275307])
p.append([-107.510582, 136.115875, 0.275307])
p.append([-117.501511, 136.115875, 0.275307])
p.append([-66.303299, 131.964951, 0.275307])
p.append([-53.170971, 131.964951, 0.275307])
p.append([-5.924474, 111.378662, 0.275307])
p.append([-9.424404, 111.396446, 0.275307])
p.append([-5.941558, 87.476509, 0.275307])
p.append([-9.441488, 87.494293, 0.275307])
p.append([-6.448509, 63.542019, 0.275307])
p.append([-9.948440, 63.559803, 0.275307])
p.append([239.203339, 119.093483, 0.952807])
p.append([-149.063583, 91.171509, 0.275307])
p.append([242.702316, 119.178131, 0.952807])
p.append([9.284539, -105.343163, 0.275307])
p.append([6.078289, -105.429489, 0.275307])
p.append([-24.304346, -135.292160, 0.275307])
p.append([-36.630997, -194.923615, 0.275307])
p.append([-36.542839, -198.422501, 0.275307])
p.append([120.364235, -190.399994, 0.275307])
p.append([120.364235, -193.899994, 0.275307])
p.append([150.919495, -162.625610, 4.518007])
p.append([149.958282, -102.336494, 8.305596])
p.append([-148.989471, -36.040218, 0.423557])
p.append([-78.124168, -95.038681, 0.275307])
p.append([-74.624176, -95.048233, 0.275307])
p.append([-77.985069, -44.039780, 0.275307])
p.append([-74.485085, -44.049332, 0.275307])
p.append([-84.956627, -33.578300, 0.275307])
p.append([-88.456612, -33.568760, 0.275307])
p.append([-85.040810, -64.377121, 0.275307])
p.append([-88.540787, -64.367584, 0.275307])
p.append([-85.146881, -103.275650, 0.275307])
p.append([-88.646866, -103.266113, 0.275307])
p.append([-148.970520, -72.440216, 0.595251])
p.append([-34.225540, 131.243164, 0.275307])
p.append([-49.565033, 135.091202, 0.275307])
p.append([-30.669865, 134.663498, 0.275307])
p.append([31.282980, -207.221069, 0.275307])
p.append([31.195051, -203.722168, 0.275307])
p.append([54.040394, -192.644958, 0.275307])
p.append([54.128548, -196.143845, 0.275307])
p.append([117.401649, -205.057190, 0.275307])
p.append([117.313583, -201.558304, 0.275307])
p.append([154.557892, -166.591385, 3.388038])
p.append([-145.519318, 21.290268, 0.275307])
p.append([153.459839, -102.397400, 8.305596])
p.append([124.950104, -132.094757, 8.305596])
p.append([110.063591, -135.914536, 8.305596])
p.append([84.184067, -105.191704, 8.305596])
p.append([115.532402, -76.355240, 8.305596])
p.append([230.824677, 32.609890, 0.275307])
p.append([234.323654, 32.695038, 0.275307])
p.append([-54.750820, -2.898878, 0.275307])
p.append([-149.024933, 31.959774, 0.275307])
p.append([131.038910, 62.489872, 0.275307])
p.append([124.700043, 59.006218, 0.275307])
p.append([204.702850, 58.800388, 0.275307])
p.append([-117.975456, 33.972942, 0.275307])
p.append([-114.782623, 35.864052, 0.275307])
p.append([125.360092, -135.586823, 8.305596])
p.append([109.653595, -132.422455, 8.305596])
p.append([34.646507, -193.132416, 0.275307])
p.append([34.734661, -196.631302, 0.275307])
p.append([55.675301, -206.608185, 0.275307])
p.append([55.587372, -203.109268, 0.275307])
p.append([-118.079285, 0.275539, 0.275307])
p.append([199.419632, -5.502129, 0.275307])
p.append([199.367340, -2.002518, 0.275307])
p.append([172.722595, -5.900934, 0.275307])
p.append([172.670303, -2.401323, 0.275307])
p.append([127.130280, -6.581954, 0.275307])
p.append([127.077606, -3.082350, 0.275307])
p.append([106.032616, -6.897115, 0.275307])
p.append([105.979942, -3.397510, 0.275307])
p.append([-87.967049, 91.041870, 0.844081])
p.append([-84.566696, 91.130524, 0.844081])
p.append([-88.056679, 66.842079, 1.137284])
p.append([-84.656326, 66.930733, 1.137284])
p.append([80.517563, -104.026123, 8.305596])
p.append([4.997698, 55.387558, 0.275307])
p.append([1.498355, 55.319832, 0.275307])
p.append([4.672596, 69.624977, 0.275307])
p.append([239.623291, 98.075317, 0.573433])
p.append([243.122284, 98.159966, 0.573433])
p.append([245.194214, 17.595139, 0.275307])
p.append([1.173256, 69.557251, 0.275307])
p.append([241.695251, 17.510042, 0.275307])
p.append([57.014038, -7.778184, 0.275307])
p.append([56.961758, -4.278575, 0.275307])
p.append([-6.446170, -61.717133, 0.275307])
p.append([-2.948311, -61.594730, 0.275307])
p.append([227.309662, -5.085508, 0.275307])
p.append([227.257401, -1.585898, 0.275307])
p.append([-88.710991, -126.865234, 0.275307])
p.append([-74.546471, -148.432693, 0.275307])
p.append([-78.045143, -148.528915, 0.275307])
p.append([-2.798443, -189.813995, 0.275307])
p.append([-6.682256, -204.674316, 0.275307])
p.append([0.700499, -189.727951, 0.275307])
p.append([15.552521, -193.612244, 0.275307])
p.append([-6.594831, -208.173233, 0.275307])
p.append([15.640681, -197.111130, 0.275307])
p.append([82.695610, -184.773468, 0.275307])
p.append([-26.262718, -7.955658, 0.275307])
p.append([94.797409, -191.620804, 0.275307])
p.append([74.169441, -206.143616, 0.275307])
p.append([74.081512, -202.644699, 0.275307])
p.append([94.885727, -195.119690, 0.275307])
p.append([163.864227, -193.899994, 0.275307])
p.append([143.193497, -204.409012, 0.275307])
p.append([143.105438, -200.910126, 0.275307])
p.append([163.864227, -197.399994, 0.275307])
p.append([80.874001, -11.542412, 0.500000])
p.append([71.362877, -7.414977, 0.450000])
p.append([86.206383, 7.808423, 0.275307])
p.append([86.258659, 4.308813, 0.275307])
p.append([71.310326, -3.915372, 0.450000])
p.append([81.363419, -124.476494, 8.305596])
p.append([73.193665, -136.704315, 8.305596])
p.append([85.590866, -144.997437, 8.305596])
p.append([93.757156, -132.762970, 8.305596])
p.append([-88.644112, 144.550552, 0.275307])
p.append([-95.432480, 132.628662, 0.275307])
p.append([-85.144127, 144.538834, 0.275307])
p.append([-66.160751, 135.466934, 0.275307])
p.append([-77.526985, 123.926384, 0.328589])
p.append([-74.027000, 123.916832, 0.328589])
p.append([-9.437694, 143.109421, 0.275307])
p.append([-5.937763, 143.087265, 0.275307])
p.append([1.930856, 122.298492, 0.275307])
p.append([5.430785, 122.276344, 0.275307])
p.append([13.994347, 134.392639, 0.275307])
p.append([-16.630026, 130.844788, 0.275307])
p.append([-149.063583, 107.705582, 0.275307])
p.append([-13.384322, 193.564453, 0.275307])
p.append([-13.375589, 197.064423, 0.275307])
p.append([10.181385, 204.005676, 0.275307])
p.append([10.190118, 207.505676, 0.275307])
p.append([2.354272, 189.215149, 0.275307])
p.append([5.854201, 189.192886, 0.275307])
p.append([-145.560196, 99.700966, 0.275307])
p.append([151.357269, -182.784271, 0.600000])
p.append([97.278854, 63.117493, 0.275307])
p.append([-149.047928, 76.143700, 0.275307])
p.append([2.294559, 179.778244, 0.275307])
p.append([5.794489, 179.756088, 0.275307])
p.append([-9.205211, 179.851013, 0.275307])
p.append([-5.705280, 179.828857, 0.275307])
p.append([142.528610, -6.351933, 0.275307])
p.append([151.938690, -14.957595, 0.500000])
p.append([-145.535782, 52.828339, 0.275307])
p.append([142.475937, -2.852329, 0.275307])
p.append([157.377090, 5.371150, 0.275307])
p.append([157.324814, 8.870760, 0.275307])
p.append([6.316784, -25.297159, 0.275307])
p.append([9.644855, -26.380650, 0.275307])
p.append([220.145645, 6.308762, 0.275307])
p.append([-136.979019, 0.178358, 0.275307])
p.append([220.093353, 9.808371, 0.275307])
p.append([217.081131, -5.189955, 0.275314])
p.append([217.028839, -1.690346, 0.275314])
p.append([-59.603539, 187.931732, 0.275307])
p.append([-61.638359, 190.779465, 0.275307])
p.append([-50.591991, 203.186874, 0.275307])
p.append([-51.339600, 206.606094, 0.275307])
p.append([-149.010956, 5.159778, 0.409923])
p.append([245.865112, -9.996704, 0.275307])
p.append([-145.503876, -8.409729, 0.404872])
p.append([107.897057, 62.557415, 0.275305])
p.append([-9.261773, 155.708832, 0.275245])
p.append([-5.761843, 155.686691, 0.275245])
p.append([2.184859, 162.441132, 0.275307])
p.append([242.366150, -10.081800, 0.275307])
p.append([5.684789, 162.419006, 0.275307])
p.append([-13.931132, 168.728027, 0.275307])
p.append([79.495163, -71.614845, 8.305596])
p.append([83.276306, -79.507767, 8.305596])
p.append([4.926103, 40.578606, 0.275307])
p.append([1.426758, 40.510876, 0.275307])
p.append([-10.073487, 42.628510, 0.275307])
p.append([-6.573557, 42.606361, 0.275307])
p.append([144.755371, -135.171249, 8.305596])
p.append([154.127090, -140.758759, 8.305596])
p.append([234.769882, 14.350552, 0.275307])
p.append([150.366135, -125.786667, 8.305596])
p.append([-6.446170, -42.193752, 0.275307])
p.append([-2.948311, -42.071350, 0.275307])
p.append([7.603518, -43.829613, 0.275307])
p.append([4.104583, -43.915955, 0.275307])
p.append([240.817612, 53.589058, 0.300000])
p.append([231.270920, 14.265452, 0.275307])
p.append([225.702789, 58.746357, 0.350000])
p.append([229.973785, 67.599396, 0.450000])
p.append([233.472748, 67.684540, 0.450000])
p.append([244.316589, 53.673721, 0.300000])
p.append([-42.350990, -2.835118, 0.275307])
p.append([-40.411064, 0.685463, 0.275307])
p.append([-11.748788, 26.601166, 0.275307])
p.append([-8.317538, 25.910858, 0.275307])
p.append([-21.252514, 11.105013, 0.275307])
p.append([-18.167728, 9.451503, 0.275307])
p.append([134.911606, -75.612572, 8.305596])
p.append([149.391281, -67.858925, 8.305599])
p.append([153.030273, -84.655762, 8.305627])
p.append([10.139042, -146.582535, 0.275307])
p.append([6.640107, -146.668869, 0.275307])
p.append([-0.865857, -126.250847, 0.275307])
p.append([-4.364792, -126.337181, 0.275307])
p.append([-11.102114, -138.510193, 0.275307])
p.append([16.876915, -134.409973, 0.400000])
p.append([26.509409, 7.425340, 0.275307])
p.append([25.682356, 4.024460, 0.275307])
p.append([11.530827, 16.089361, 0.275307])
p.append([13.723803, 18.817156, 0.275307])
p.append([42.648182, -7.843905, 0.275307])
p.append([42.595901, -4.344296, 0.275307])
p.append([44.476276, 3.684685, 0.275307])
p.append([44.424007, 7.184294, 0.275307])
p.append([161.899918, 58.910496, 0.275307])
p.append([167.173080, 71.142326, 0.450000])
p.append([175.938858, 62.374382, 0.275307])
p.append([-100.468056, 16.266956, 0.275307])
p.append([-97.623611, 19.079279, 0.275307])
p.append([-95.793716, -3.109917, 0.275307])
p.append([-67.323837, 0.536519, 0.275307])
p.append([-88.306274, 21.530605, 0.350000])
p.append([-84.806297, 21.521088, 0.350000])
p.append([-77.887169, -8.140573, 0.275307])
p.append([-74.387177, -8.150118, 0.275307])
p.append([-67.154907, -136.210205, 0.275307])
p.append([-96.520119, -140.340103, 0.400000])
p.append([-85.211014, -126.874771, 0.275307])

from math import sqrt


# Function calculates distance
# between two points
def dist(p1, p2):
    x0 = p1[0] - p2[0]
    y0 = p1[1] - p2[1]
    z0 = p1[2] - p2[2]
    return sqrt(x0 * x0 + y0 * y0 + z0 * z0)


p1 = p[0]
p2 = p[1]

a = 0
b = 0

# Function to find the maximum
# distance between any two points
def maxDist(p):
    n = len(p)
    maxm = 0

    # Iterate over all possible pairs
    for i in range(n):
        for j in range(i + 1, n):
            # Update maxm
            if dist(p[i], p[j]) > maxm:
                global p1, p2
                p1 = p[i]
                p2 = p[j]
                global a, b
                a = i
                b = j
            maxm = max(maxm, dist(p[i], p[j]))

    # Return actual distance
    return maxm

print(maxDist(p))
print(p1)
print(p2)
print(p[144])
print(p[197])
